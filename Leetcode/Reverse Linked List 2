/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
    vector<int>v;
public:
    ListNode* reverseBetween(ListNode* head, int l, int r) {
        if (head->next==NULL || l==r)return head;
        ListNode* temp=head;
        while(temp)
        {
            v.push_back(temp->val);
            temp=temp->next;
        }
        while(l<r)
        {
            swap(v[l-1],v[r-1]);
            l++;r--;
        }
        temp=head;
        int i=0;
        while(temp)
        {
            temp->val=v[i];
            i++;
            temp=temp->next;
        }
        return head;
        
    }
};
